clc; clear;

% Auto-generated by cameraCalibrator app on 06-Oct-2025
%-------------------------------------------------------


% Define images to process
imageFileNames = {'Lab5/Captures/Image1.png',...
    'Lab5/Captures/Image2.png',...
    'Lab5/Captures/Image3.png',...
    'Lab5/Captures/Image4.png',...
    'Lab5/Captures/Image5.png',...
    'Lab5/Captures/Image7.png',...
    'Lab5/Captures/Image8.png',...
    'Lab5/Captures/Image9.png',...
    'Lab5/Captures/Image10.png',...
    'Lab5/Captures/Image11.png',...
    'Lab5/Captures/Image13.png',...
    'Lab5/Captures/Image19.png',...
    'Lab5/Captures/Image20.png',...
    'Lab5/Captures/Image23.png',...
    'Lab5/Captures/Image31.png',...
    'Lab5/Captures/Image36.png',...
    'Lab5/Captures/Image37.png',...
    'Lab5/Captures/Image39.png',...
    'Lab5/Captures/Image40.png',...
    'Lab5/Captures/Image41.png',...
    'Lab5/Captures/Image42.png',...
    'Lab5/Captures/Image43.png',...
    'Lab5/Captures/Image45.png',...
    'Lab5/Captures/Image46.png',...
    };
% Detect calibration pattern in images
detector = vision.calibration.monocular.CheckerboardDetector();
minCornerMetric = 0.150000;
[imagePoints, imagesUsed] = detectPatternPoints(detector, imageFileNames, 'MinCornerMetric', minCornerMetric);
imageFileNames = imageFileNames(imagesUsed);

% Read the first image to obtain image size
originalImage = imread(imageFileNames{1});
[mrows, ncols, ~] = size(originalImage);

% Generate world coordinates for the planar pattern keypoints
squareSize = 25.000000;  % in millimeters
worldPoints = generateWorldPoints(detector, 'SquareSize', squareSize);

% Calibrate the camera using fisheye parameters
[cameraParams, imagesUsed, estimationErrors] = estimateFisheyeParameters(imagePoints, worldPoints, ...
    [mrows, ncols], ...
    'EstimateAlignment', false, ...
    'WorldUnits', 'millimeters');

% View reprojection errors
% h1=figure; showReprojectionErrors(cameraParams);

% Visualize pattern locations
% h2=figure; showExtrinsics(cameraParams, 'CameraCentric');

% Display parameter estimation errors
% displayErrors(estimationErrors, cameraParams);

% For example, you can use the calibration data to remove effects of lens distortion.
undistortedImage = undistortFisheyeImage(originalImage, cameraParams.Intrinsics);

% See additional examples of how to use the calibration data.  At the prompt type:
% showdemo('MeasuringPlanarObjectsExample')
% showdemo('StructureFromMotionExample')
